; A260688: a(n) = the least number of pieces of currency of denominations .01, .05, .10, .25, 1, 5, 10, 20, 50, 100 that the greedy algorithm uses to make n times .01 (n "cents") in change.
; Submitted by loader3229
; 0,1,2,3,4,1,2,3,4,5,1,2,3,4,5,2,3,4,5,6,2,3,4,5,6,1,2,3,4,5,2,3,4,5,6,2,3,4,5,6,3,4,5,6,7,3,4,5,6,7,2,3,4,5,6,3,4,5,6,7,3,4,5,6,7,4,5,6,7,8,4,5,6,7,8,3,4,5,6,7
; Formula: a(n) = ((n%25)==10)+((n%25)==5)+((n%25)==1)+6*((n%25)==24)+6*((n%25)==19)+5*((n%25)==23)+5*((n%25)==18)+5*((n%25)==14)+5*((n%25)==9)+4*((n%25)==22)+4*((n%25)==17)+4*((n%25)==13)+4*((n%25)==8)+4*((n%25)==4)+3*((n%25)==21)+3*((n%25)==16)+3*((n%25)==12)+3*((n%25)==7)+3*((n%25)==3)+2*((n%25)==20)+2*((n%25)==15)+2*((n%25)==11)+2*((n%25)==6)+2*((n%25)==2)+floor(n/25)

mov $2,$0
div $2,25
mod $0,25
mov $1,$0
equ $1,1
add $2,$1
mov $1,$0
equ $1,2
mul $1,2
add $2,$1
mov $1,$0
equ $1,3
mul $1,3
add $2,$1
mov $1,$0
equ $1,4
mul $1,4
add $2,$1
mov $1,$0
equ $1,5
add $2,$1
mov $1,$0
equ $1,6
mul $1,2
add $2,$1
mov $1,$0
equ $1,7
mul $1,3
add $2,$1
mov $1,$0
equ $1,8
mul $1,4
add $2,$1
mov $1,$0
equ $1,9
mul $1,5
add $2,$1
mov $1,$0
equ $1,10
add $2,$1
mov $1,$0
equ $1,11
mul $1,2
add $2,$1
mov $1,$0
equ $1,12
mul $1,3
add $2,$1
mov $1,$0
equ $1,13
mul $1,4
add $2,$1
mov $1,$0
equ $1,14
mul $1,5
add $2,$1
mov $1,$0
equ $1,15
mul $1,2
add $2,$1
mov $1,$0
equ $1,16
mul $1,3
add $2,$1
mov $1,$0
equ $1,17
mul $1,4
add $2,$1
mov $1,$0
equ $1,18
mul $1,5
add $2,$1
mov $1,$0
equ $1,19
mul $1,6
add $2,$1
mov $1,$0
equ $1,20
mul $1,2
add $2,$1
mov $1,$0
equ $1,21
mul $1,3
add $2,$1
mov $1,$0
equ $1,22
mul $1,4
add $2,$1
mov $1,$0
equ $1,23
mul $1,5
add $2,$1
mov $1,$0
equ $1,24
mul $1,6
add $2,$1
mov $0,$2
