; A027618: c(i,j) is cost of evaluation of edit distance of two strings with lengths i and j, when you use recursion (every call has a unit cost, other computations are free); sequence gives c(n,n).
; Submitted by loader3229
; 1,4,19,94,481,2524,13483,72958,398593,2193844,12146179,67570078,377393953,2114900428,11885772379,66963572734,378082854913,2138752086628,12118975586803,68774144872414,390815720696161,2223564321341884,12665121241749259,72211867502896894,412107313722842881,2353867611887535124,13455348529835453923,76970365123509676318,440600565538340690593,2523707809779240936364,14463962197677125523643,82941737028436669120510,475862670945204361641985,2731487431800147791161540,15686044283842293002626003
; Formula: a(n) = 3*truncate(gcd(e(n+1),d(n+1))/6)+1, b(n) = 2*c(n-1)+b(n-1)+truncate(((2*n-1)*(2*c(n-1)+b(n-1)))/(-n)), b(5) = -2160, b(4) = 396, b(3) = -72, b(2) = 12, b(1) = 0, b(0) = 3, c(n) = -c(n-1)+truncate(((2*n-1)*(2*c(n-1)+b(n-1)))/(-n)), c(5) = -6012, c(4) = 1152, c(3) = -228, c(2) = 48, c(1) = -12, c(0) = 3, d(n) = -c(n-1)+d(n-1), d(5) = -963, d(4) = 189, d(3) = -39, d(2) = 9, d(1) = -3, d(0) = 0, e(n) = e(n-1), e(5) = 0, e(4) = 0, e(3) = 0, e(2) = 0, e(1) = 0, e(0) = 0

mov $3,3
mov $5,3
add $0,1
lpb $0
  sub $0,1
  add $2,1
  add $3,$5
  add $3,$5
  sub $4,1
  sub $6,$5
  mov $1,$3
  mul $1,$2
  div $1,$4
  add $2,1
  add $3,$1
  mul $5,-1
  add $5,$1
lpe
gcd $7,$6
mov $0,$7
div $0,6
mul $0,3
add $0,1
